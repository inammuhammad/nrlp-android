apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.gms.google-services'
apply plugin: "com.hiya.jacoco-android"
apply plugin: "org.sonarqube"
apply from: 'sonarqube.gradle'
apply plugin: 'dexguard'
android {
    compileSdkVersion compileSdkVer
    buildToolsVersion buildToolsVer

    defaultConfig {
        applicationId "com.onelink.sohnidharti.app"
        minSdkVersion minSdkVer
        targetSdkVersion targetSdkVer
        versionCode 21
        versionName "2.6"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }

    signingConfigs {
        debug {
            storeFile file(DEBUG_STORE_FILE)
            storePassword DEBUG_STORE_DATA
            keyAlias DEBUG_STORE_DATA
            keyPassword DEBUG_STORE_DATA
        }
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD

            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources = false
            debuggable false // added to disable debugging in release mode
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'boolean', 'IS_DEBUG', 'false'

        }
        qa {
            initWith buildTypes.debug
            testCoverageEnabled = true
            applicationIdSuffix ".qa"
            versionNameSuffix "-qa"
            minifyEnabled false
            buildConfigField 'boolean', 'IS_DEBUG', 'true'
        }
        debug {
            signingConfig signingConfigs.debug
            testCoverageEnabled = true
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            minifyEnabled false
            shrinkResources = false
            buildConfigField 'boolean', 'IS_DEBUG', 'true'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //proguardFile getDefaultDexGuardFile('dexguard-debug.pro')
        }
    }

    /*dexguard {
        path = 'C:/Users/ahmad.zaheer/AndroidStudioProjects/nrlp-android/DexGuard-9.2.0'
        version = '9.2.0'
        license = 'C:/Users/ahmad.zaheer/AndroidStudioProjects/nrlp-android/dexguard-license.txt'
        configurations {
            debug {
                defaultConfiguration 'dexguard-debug.pro'
                configuration 'dexguard-project.txt'
                configuration 'proguard-project.txt'
            }
            release {
                defaultConfiguration 'dexguard-release.pro'
                configuration 'dexguard-project.txt'
                configuration 'proguard-project.txt'
            }
        }
    }*/

    externalNativeBuild {
        ndkBuild {
            path "src/main/jni/Android.mk"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        dataBinding = true
    }

    androidExtensions {
        experimental = true
    }

    lintOptions {
        abortOnError false
    }

    gradle.taskGraph.whenReady { taskGraph ->
        taskGraph.allTasks.each { task -> //get all tasks
            if (task.name.contains("testDebugUnitTest")) { //filter it to test tasks only
                task.ignoreFailures = true //keepgoing if it fails
            }
        }
    }

    jacoco {
        version = "0.8.4"
    }

    tasks.withType(Test) {
        jacoco.includeNoLocationClasses = true
    }

    bundle {
        language {
            enableSplit = false
        }
    }
}


dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    testImplementation 'junit:junit:4.13'
    testImplementation 'org.mockito:mockito-core:3.5.0'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "com.squareup.retrofit2:retrofit-mock:$retrofit"

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'


    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_scope_version"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit"
    implementation "com.squareup.retrofit2:converter-jackson:$retrofit"

    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"

    //RXjava and android
    implementation "io.reactivex.rxjava2:rxjava:$rxjavaversion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroidversion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rxadapterversion"

    // dagger
    implementation "com.google.dagger:dagger:$dagger"
    implementation "com.google.dagger:dagger-android:2.35.1"
    kapt "com.google.dagger:dagger-compiler:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$dagger"
    implementation "com.google.dagger:dagger-android-support:$dagger"

    implementation 'com.google.android.material:material:1.2.0'

    //For Network Requests Visualisation
    debugImplementation 'com.readystatesoftware.chuck:library:1.1.0'
    qaImplementation 'com.readystatesoftware.chuck:library:1.1.0'
    releaseImplementation 'com.readystatesoftware.chuck:library-no-op:1.1.0'

    //For dimens based on different DPIs
    implementation 'com.intuit.sdp:sdp-android:1.0.6'

    // Recommended: Add the Firebase SDK for Google Analytics.
    implementation 'com.google.firebase:firebase-analytics:17.4.4'

    // Add the Firebase Crashlytics SDK.
    implementation 'com.google.firebase:firebase-crashlytics:17.1.1'

    implementation 'com.google.firebase:firebase-messaging:20.2.4'

    //RootBeer dependency implementation
    implementation project(':rootbeerlib')

    //Phone Number Library
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.4.2'

    implementation "androidx.preference:preference-ktx:1.1.1"
    //implementation 'com.guardsquare:dexguard-runtime:9.1.5'

    implementation files('lib/DexGuard-9.3.2/lib/dexguard-runtime.aar')

    implementation("com.google.android.play:core:1.10.3")
    implementation("com.google.android.play:core-ktx:1.8.1")


}

dexguard {
    path = 'C:\\Users\\ahmad.zaheer\\AndroidStudioProjects\\nrlp-android\\app\\lib\\DexGuard-9.3.2'
    license = "C:\\Users\\ahmad.zaheer\\AndroidStudioProjects\\nrlp-android\\app\\lib\\DexGuard-9.3.2\\lib"
    jvmArgs '-Xmx2048M', '-Dallow.incomplete.class.hierarchy=true'
    configurations {
        debug {
            defaultConfiguration 'dexguard-debug.pro'
//                configuration 'dexguard-project.txt'
//                configuration 'proguard-project.txt'
        }
        release {
            defaultConfiguration 'dexguard-release.pro'
            configuration 'dexguard-project.txt'
            configuration 'proguard-rules.pro'
            defaultConfiguration 'dexguard-rasp.pro'
        }
    }
}